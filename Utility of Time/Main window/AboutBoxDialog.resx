<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMjIAAAEAGABoHwAAFgAAACgAAAAyAAAAZAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAoTygkSyQoTygkSyQoTygoTygfMx8XFhcXFhcbICgsT3QsTXQsT3QsTXQsTXQsT3QXJTQXFhcXFhcX
        FhcXFhcXFhcXHhcoTygkSyQoTygkSyQoTygkSyQbKRsXFhcXFhckKxcwUR85TR8wUR85TR85TR85TR85
        TR85TR85TR8kKxcXGBcXFhcXFhcXGBcXFhcXFhcXFhcAAHmweUyWTEyWTEyWTESOREyWTDRaNCwqLCwq
        LDQ+TFSW3FSW3FSS3FSW3FSW3FSW3DdKZCwqLCwqLCw6TCRSfClWhCpOdCwyLCwyLCwyLESKREyWTEyW
        TDRONCwqLCwqLDRmbETS3ETS3ETS3ETS3ETS3ETS3ETS3ETS3ETS3EyefGSKPGSGNGSKPGSGNGSKPGSC
        NCAfIAAAea15RI5ETJZMRI5ETJZMTJZMPGI8LCosLCosLDpMVJbcVJLcVJbcVJLcVJbcVJLcLEZkLCos
        LCosLDpMJF6ULFqMJFJ8LCosLCosLCosRIpETJZMRI5ENFI0LCosLCosNGZsRNbsRNbsRNbsRNbsRNbs
        RNbsRNbsRNbsRNbsXK6EbJI8bJI8bJI8bJI8bJI8ZIY0IB8gAAB5sHlMlkxMlkxMlkxMlkxEjkQ8Yjws
        KiwsKiw0PkxUltxUltxUktxUktxUktxUltw3SmQsKiwsKiwsOkwkXpQpVoQkUnwsKiwsKiwsKixEikRE
        jkRMlkw0TjQsKiwsKiw0ZmxE1uxE1uxE0txE1uxE0txE1uxE1uxE1uxE0txcroRskjxskjxcmjxsljxc
        mjxkijwgHyAAAHmweUSOREyWTESOREyWTEyWTESCRDxuPDxuPDxmRDdKZCxGXCxSXCxGXCxSXCxGXDRO
        ZCxGZCpKbCRSfClWhCxajClWhCxObCpKbCxGZDROPCxKNDRONExiNFRuNERuNGSKPFyqfFyqfFyqfFyq
        fFyqfFyqfDRubDRmbDRmbEyefFS+tFS+tFS+tFS+tFS+tFS6pDJRJgAAebB5TJZMTJZMTJZMRI5ETJZM
        RI5ETJZMTJZMRH5ELCosLCosLCosLCosLCosLCosLEZkJF6UKVaELFqMJF6UKVaELFqMKVaELFqMLFqM
        LC4sLCosLCosRG40bJI8bJY8bJY8bJI8bJY8bJI8bJI8bJY8XJo8MTYsLCosLCosPJKkRNbsRNbsRNbs
        RNbsRNbsRNLcUGwsAAB5rXlEjkRMlkxEjkRMlkxMlkxMlkxMlkxEjkREfkQsKiwsKiwsKiwsKiwsKiws
        KiwsRlwkVowsWowkXpQpVoQkXpQsWowkXpQpVoQkXpQsLiwsKiwsKixEbjRskjxsljxskjxskjxsljxs
        ljxskjxskjxkhjQtOiwsKiwsKiw8kqRE1uxE1uxE1uxE1uxE1uxE0txQbCwAAHmweUyWTEyWTEyWTEyW
        TESOREyWTEyWTEyWTESGRDRSNDRSNDRSNCwqLCwqLCwqLCxObClWhCRelClWhCxajCxajCRSfCRCXCRC
        XCRCXERSLERSLERSLFx+NGySPGyWPGySPGyWPGySPGySPGyWPGySPGyWPExyNERuNERuNCSebFS6nFS6
        nFS6nFS6nFS6nFS6nFBvLAAAebB5RI5ETJZMTJZMRI5ETJZMRI5ETJZMRI5ETJZMTJZMTJZMTJZMLC4s
        LCosLCosHEJkJF6ULFqMKVaEJF6UJFaMJFJ8LCosLCosLCosZIY0XJo8bJI8bJI8bJI8bJY8bJI8bJY8
        bJY8bJY8bJI8bJY8bJI8dM5EdNJEdNZEbK48bJI8bJI8bJI8bJY8bJI8bJY8UGwsAAB5rXlMlkxMlkxE
        jkRMlkxMlkxMlkxMlkxMlkxMlkxEjkRMlkxEjkQsLiwsKiwsKiwsRmQsWowpVoQkXpQpVoQpVoQkUnws
        KiwsKiwsKixkhjRsljxsljxsljxsljxskjxskjxcmjxkhjRsljxsljxskjxsljx0zkR01kR01kRsrjxs
        ljxsljxsljxsljxskjxsljxQbCwAAHmweUyWTESOREyWTEyWTESOREyWTESOREyWTESORESKRESCRESG
        RCwqLCwqLCwqLCQ6VCRSfCpOdCRSfCpOdCRSfCxGZCwqLCwqLCwqLExyNFx+NGSGNGSGNGyWPGySPGyW
        PGySPGySPGyWPFyaPGyePGyaPHTORHTWRHTWRGyyPFyaPGyePFyaPGyePFyaPFyaPFBsLAAAea15RI5E
        TJZMTJZMTJZMRI5ETJZMTJZMTJZMPHI8LCosLCosLCosLCosLCosLCosLCosLCosLCosLCosLCosLCos
        LCosLCosLCosLCosLCosLCosLCosRG40bJI8bJY8bJI8bJY8bJY8bJo8dNZEdNZEdNZEdNZEdNZEdNZE
        dNZEdNZEdNZEdNZEdNZEdNZEdNJERHIsAAB5sHlMlkxMlkxEjkRMlkxMlkxMlkxMlkxEjkREfkQsKiws
        KiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKixUajRskjxs
        ljxskjxskjxskjxsnjx01kR01kR01kR01kR01kR01kR01kR01kR01kR01kR01kR01kR0zkRQbCwAAHmt
        eUyWTESOREyWTEyWTESOREyWTESOREyWTER+RCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwq
        LCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLERuNGySPGySPGySPFyaPGySPFyaPHTWRHTWRHTWRHTWRHTW
        RHTWRHTWRHTWRHTWRHTWRHTWRHTWRHTORERyLAAAebB5TJZMTJZMRI5ETJZMTJZMPGo8MTYsMTYsMEJE
        JGKkJGKkJGKkLCosLCosLCosJE58JGKkJGKkJGKkJGKkLGakJGKkJGKkJGKkJGKkJCKsJBqsJB6kLC5U
        LC4sLDIsLDIsLC4sLDIsPEYsXJo8bJo8bJ48dNJEdNZEdNZEdNZEdNZEdNZEdNZEdNZEdNZEdNJEUGws
        AAB5sHlEjkRMlkxMlkxMlkxMlkw0WjQsKiwsKiwlNkQkarQkarQkarQsLiwsKiwsKiwpVoQkarQkarQk
        arQkarQMZrQkarQkarQkarQkarQkIrwkGrwkGrwkIlwsKiwsKiwsKiwsKiwsKiwsMixskjxskjxcmjxx
        vjx01kR01kR01kR01kR01kR01kR01kR01kR00kRQbCwAAHmteUyWTESOREyWTEyWTESORDxiPCwqLCwq
        LCU2RCRqtAxmtCRqtCwqNCwqLCwqLBRSjCRqtAxmtCRqtCRqtCRqtCRqtCRqtCRqtCRqtCQivCQavCQa
        vCQiXCwqLCwqLCwqLCwqLCwqLCwyLGySPGySPGySPHTORHTWRHTWRHTWRHTWRHTWRHTWRHTWRHTWRHTS
        RFBsLAAAZ35nNE40NE40NE40NE40NFI0LFJcJFJ8JFJ8JE58JD5cJEJcJEJcJFJ8JFJ8JE58LGakJGq0
        JGq0XJLEpL7crMbkpL7crMbkpL7cpMLcNDJsJCJcJCJcJCJ0JB6EJB6EJB6EJB6EJB6EJCJ0NE40RFIs
        RFIsXJo8bK48bK48cb48dNZEdNZEdNZEdNZEdNZEdNJEVI0sAABhYGEsKiwsKiwsKiwsKiwsKiwsRmQk
        arQkarQkXpQsKiwsKiwsKiwkZqwkarQtcrwMZrQkarQtcrx8ptT09vT09vT09vT09vT09vT09vQ8Ojws
        KiwsKiwkHoQkGrwkGrwkGrwkGrwkGrwkGqwsKiwsKiwsKixcfjRcmjxskjxxvjx01kR01kR01kR01kR0
        1kR01kRWnzIAAGFgYSwqLCwqLCwqLCwqLCwqLBxCZCRqtCRqtCRelCwqLCwqLCwqLCRmrCRqtCRqtCRq
        tCRqtCRqtHym1PT29PT29PT29PT29PT29PT29Dw6PCwqLCwqLCQehCQatCQavCQavCQavCQavCQarCwq
        LCwqLCwqLGSGNGySPGyWPGy6PHTWRHTWRHTWRHTWRHTWRHTWRFafMgAAbYGXPE5sLFJ8LEZkJD5cJEJc
        KkpsJFKEJFKELE58VD5sVD5sVD5sJFKEJFKEJFJ8VIa0bJrMbJrMjKa8rK6srK6srK6srK6snJ6crK6s
        dHZ0dHJ0dHJ0PDqEJB6EJB6EJB6cJBq8JBq8JBqsLCosLCosLCosXH40bJY8bJI8bK48cb48cb48cb48
        cb48cb48cb48RHIsAACRtvBsmuxsnuw0dsQkarQMZrQqTnQsKiwsKiw8MkysYuSsYuSsYuQrLjQsKiws
        Kiy8urz09vT09vScnpwsKiwsKiwsKiwsKiwsKiwsKizU3uz09vT09vR0cnQsKiwsKiwkIlwkGrwkGrwk
        GqwsKiwsKiwsKixkgjRskjxsljxskjxsljxskjxsljxskjxsljxkhjQgHyAAAJG28Gya7Gya7DR2xCRq
        tCRqtCdKdCwqLCwqLEQ2VKxi5Kxi5Kxi5CwqNCwqLCwqLKyurPT29PT29JyenCwqLCwqLCwqLCwqLCwq
        LCwqLOTm5PT29PT29HRydCwqLCwqLCQiZCQavCQavCQarCwqLCwqLCwqLGSGNGyWPGyWPGySPGySPGyW
        PGySPGyWPGyWPGSGNCAfIAAAkbPwZJrsbJ7sNHbEJGKkJGKkJ0p0Mi48Mi48VDpkrGLkrGLkrGLkKy40
        LCosLCosvLq89Pb09Pb0nJ6cLCosLCosLCosLCosLCosLCos5Obk9Pb09Pb0dHZ8LCo0Ky40JCZkJBqs
        JBqsJB6kLCY0JCY8JCY8THI0ZIY0ZIY0bJI8bJY8bJI8bJI8ZIY0ZIY0ZIY0ICUgAACRtvBsnuxsmuws
        RlwsKiwsKixkQnysYuSsYuSsYuSsYuSsYuSsYuQsKjQsKiwsKiy8urz09vT09vScnpwsKiwsKiwsKiws
        KiwsKiwsKizk5uT09vT09vRsmswMerQkarQkUnwsKiwsKiwkJjwkGrwkGrwkGrwkJjwsKiwsKixMYjRs
        ljxskjxEbjQsKiwsKiwsMiw4bzgAAJG28Gya7GSa7DxGXCwqLCwqLGxGhKxi5Kxi5Kxi5Kxi5Kxi5Kxi
        5CsuNCwqLCwqLKyurPT29PT29JyenCwqLCwqLCwqLCwqLCwqLCwqLOTm5PT29PT29GyazCRqtCRqtCRS
        fCwqLCwqLCQmPCQavCQavCQavCQmPCwqLCwqLFRqNGySPGyWPFRuNCwqLCwqLCwyLDJpMgAAkbbwZJrs
        bJ7sLEZcLCosLCosVD5srGLkrGLkrGLkrGLkrGLkrGLkLCo0LCosLCosvLq89Pb09Pb0jJqkLCosLCos
        LC4sLCosLC4sLCos5Obk9Pb09Pb0bJrMJGq0DGa0JFJ8LCosLCosJCY8JBq8JBq8JBq8JCY8LCosLCos
        TGI0bJI8bJY8RG40LCosLCosMTYsOG84AABnbHM0OkQ0OkQsKiwsKiwsKiwsKiwyLjwyLjxUPmysYuSs
        YuSsYuQrLjQsKiwsKiwtOixMTkw0TjyEiozU0tTU0tTU0tTU0tTU0tTU0tRUisRUisREgsSkwtzU3uzU
        3uyMrswkXpwkXpwkZqxchuRchuRchuQ0NkQsKiwsKiwsLiwtOiwtOiwwQkQkUnwqTnQqTnQhKyAAAGFg
        YSwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLDQ2RKxi5Kxi5Kxi5CwqNCwqLCwqLCwqLCwqLCwqLHx6fPT2
        9PT29PT29PT29PT29PT29DR2vCRqtCRqtKzG5PT29PT29KTC3CRqtAxmtDR2xGSa7Gya7Gya7Cw6TCwq
        LCwqLCwqLCwqLCwqLCU2RClWhCRelCRSfCAfIAAAYWBhLCosLCosLCosLCosLCosLCosLCosLCosPDJM
        rGLkrGLkrGLkKy40LCosLCosLCosLCosLCoshIKE9Pb09Pb09Pb09Pb09Pb09Pb0NHa8JGq0JGq0pMLc
        9Pb09Pb0pMLcJGq0JGq0LXK8ZJrsbJ7sbJrsLDpMLCosLCosLCosLCosLCosLDpMJF6UKVaEKVaEIB8g
        AABtjW08Zjw8ZjwxNiwsKiwsKiwsKiwsKiwsKiw8MkysYuSsYuSsYuSETqR8Tpx8Tpx8Tpx8Tpx0SpR8
        YoyEgoR8enyEipR8ptR8ptR8ptSautyautyautyMlqR8enyEhoSMmqSkvtyautyautxkmuxsmuxsnuws
        OkwsKiwsKiwlNkQsRlwsRlwsTmwkVowsWowpVoQgNEQAAHmteUSOREyWTDxGLCwqLCwqLCwqLCwqLCwq
        LDwyTKxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5HxOnCwqLCwqLCgyPCRqtCRqtCRqtOTq9PT29PT2
        9HRydCwqLCwqLHR2dPT29PT29OTq9Gye7Gye7Gya7CU2RCwqLCwqLBxCZCxajCxajCRelClWhCxajCRe
        lB5AYgAAebB5TJZMTJZMJEI0LCosLCosLCosLCosLCosPDJMrGLkrGLkrGLkrGLkrGLkrGLkrGLkrGLk
        rGLkdEqULCosLCosKDI8DGa0JGq0JGq05Or09Pb09Pb0dHJ0LCosLCosdHZ09Pb09Pb05Or0ZJrsbJrs
        bJ7sLDpMLCosLCosLEZcLFqMJFaMLFqMLFqMJF6ULFqMIENoAAB5rXlMlkxEjkQ8RiwsKiwsKiwsKiws
        KiwsKiwsLlSsYuSsYuSsYuSsYuSsYuSsYuSsYuSsYuSsYuR8TpwsKiwsKiwlNkQkarQkarQkarTk6vT0
        9vT09vR0cnQsKiwsKix0dnT09vT09vTk6vRsnuxsnuxsnuw0NkQsKiwsKiwcQmQsWowsWowpVoQkXpQp
        VoQsWowgQ2gAAHmweUyWTEyWTCRCNCwqLCwqLCgyPCQ6VCQ6VDxCbIRStIRStJRWvKxi5Kxi5Kxi5Kxi
        5Kxi5Kxi5IRStEQ2VEQ2VDw+XBRWnBRSjCRelKzG5NTe7Mza7ISGhFRWVFRWVISKlLzS7Mza7LzS7GSa
        7Gya7Gya7CU2RCwqLCwqLCRCXCxajCxajCRelClWhCxajClWhB86VgAAebB5TJJMRI5EPEYsLCosLCos
        FE6EBHr0BHr0DGrMLCosLCosLCospF7UrGLkrGLkrGLkrGLkrGLkrGLkrGLkrGLklFrELCosLCosLCos
        JGKkDGa0JGq0rMbk9Pb09Pb0pMLcJGq0JGq0LXK8bJ7sbJrsbJ7sNDZELCosLCosJEJcJF6UKVaELFqM
        KVaEJF6UJFJ8IB8gAABzqnNMlkxMlkwkQjQsKiwsKiwUToQEevQEevQMaswsKiwsKiwsKiykXtysYuSs
        YuSsYuSsYuSsYuSsYuSsYuSsYuSkXtQsKiwsKiwsKiwkYqQkarQkarSsxuT09vT09vSsxuQkarQkarQt
        crxsmuxkmuxsnuwlNkQsKiwsKiwkQlwkXpQkVowkXpQkXpQpVoQpVoQgHyAAAHmweUyWTESORDxGLCwq
        LCwqLBROhAR69AR69AxqzCwqLCwqLCwqLKRe3Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5JRaxCwqLCwq
        LCwqLBRilAxmtCRqtKTC3PT29PT29KS+3CRqtCRqtC1yvGSa7Gye7GSa7CgyPCwqLCwqLCQ6VClWhClW
        hClWhClWhCRWjClWhCAfIAAAebB5RI5ETJZMPEYsLCosLCosHF48FJJUFJJUDI50BHbsBHbsBHbsKDI8
        LCosLCoshFKsrGLkrGLkrGLkrGLkrGLklFrELCosLCosLCosLCosLCosLCosLCosLC4sLC4sRFp8ZJrs
        ZJrsXIrULCosLC4sLCosLCosLCosLCosLCosLCosLCosLCosLCosLCosKDI8PmmdAAB5sHlMlkxMlkwk
        QjQsKiwsKiw0VjQUklQTllQMjnQEevQEfvQEfvQsKjQsKiwsKiyETqSsYuSsYuSsYuSsYuSsYuSUWsQs
        KiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiw8VnRsmuxsnuxkjtQsKiwsKiwsKiwsKiwsKiwsKiwsKiws
        KiwsKiwsKiwsKiwsKiwrLjQ+b6MAAHmteUSOREyWTDxGLCwqLCwqLBxePBSSVBSSVAyOdAR27AR+9AR2
        7CwuLCwqLCwqLIRSrKxi5Kxi5Kxi5Kxi5Kxi5JRaxCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLERW
        dGya7Gya7GSO1CwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCwqLCsuND5vowAAebB5TJZM
        TJZMJEI0LCosLCosHF48FJJUE5ZUE5ZUFKKkFKKkFKKkDGa0DGa0DGK8PEZ8TDpcVDpkdEqUrGLkrGLk
        pF7chFK0hFK0hFKshFK0hFKshFK0hFK0hFKshFK0ZFKMLEZkN0pkKkpsJFaMJFaMJFaMKy40LCosLCos
        NFY0PHI8PHI8PFo8LCosLCosKy40Pm+jAAB5sHlMkkxEjkQ0RjQsKiwsKiwcXjwUklQTllQUmlwktnwk
        tnwksnwEfvQEfvQEevQcQmQsKiwsKixkQnysYuSsYuSsYuSsYuSsYuSsYuSsYuSsYuSsYuSsYuSsYuSs
        YuSETqQsKiwsKiwoMjwkarQkarQkarQoMjwsKiwsKiw8ajxEjkRMlkw8bjwsKiwsKiwrLjQ+b6MAAHOq
        c0yWTEyWTDRGNCwqLCwqLBxePBOWVBSSVBOWVCS2fCS2fCS2fAR27AR27AR69BxCZCwqLCwqLGRCfKxi
        5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5Kxi5HxOnCwqLCwqLCgyPCRqtAxmtCRqtCgyPCwq
        LCwqLDxqPEySTEyWTDxuPCwqLCwqLCgyPD5sowAAebB5TJZMRI5EPGo8NFo0NFY8HF48HF48HGZEHHJM
        HKZsHKZsHKZsDJa8DJa8DJa8FGKUJE58FE6EPEqMbEaEbEaEbEaEbEaEbEaEdEqUrGLkrGLkrGLkhFK0
        dEqUbEaEbE6URFp8RFp8RFp8J0p0Kk50Kk50NFY8NFY0NFY0RH5ETJZMRI5ERIJENFY0NFY0PFo8Mkxo
        AAB5sHlMlkxEjkRMlkxEjkRMlkxMYjQsKiwsKiwkQjQTllQUklQTllQksnwktnwksnwMjtQEevQEevQU
        VpwsKiwsKiwsKiwsKiwsKiwsKiyUWsSsYuSsYuRUPmwsKiwsKiw8VnRsmuxkmuxUktwsKiwsKiwsKixE
        hkRMlkxMkkxMlkxEjkRMlkxEjkRMlkxMlkxEjkQgHyAAAHmteUSOREyWTEyWTEyWTEyWTCxePCwqLCwq
        LC06LBSSVBSSVBSSVCS2fCS2fCS2fAyO1AR27AR69BRWnCwqLCwqLCwqLCwqLCwqLCwqLJRaxKxi5Kxi
        5FQ+bCwqLCwqLDxWdGya7Gye7GSO1CwqLCwqLCwqLESGRESOREyWTESOREyWTEyWTEyWTEyWTESORFSG
        TCAfIAAAebB5TJZMTJZMTJZMRI5ETJZMPGo8LTosLTosLEo0FIJMFIJMFIJMFJZkFJZkJJ5sDHq0DGrM
        DGrMFE6ELCosLCosLCosLCosLCosLCoshFKslFa8lFrEPEJsJTZEJTZEPFZ0XIbMXIbMXH60LTosLTos
        LTosRIpETJZMTJZMTJZMTJZMTJZMRI5ETJZMTJZMRI5EISsgAAB5sHlEjkRMlkxEjkRMlkxEjkRMlkxM
        lkxEjkREfkQsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiwsKiws
        KiwsKiwkUnwkarQkarQkUnwsKiwsKiwsMixMlkxEjkRMlkxMlkxMlkxEjkRMlkxEjkRMlkxMlkxEjkRM
        lkxEjkQ4bzgAAHmweaDFoKDHoKDFoKDHoKDFoKDHoKDFoKDHoJy6nI+Oj4+Oj4+Oj4+Oj4+Oj4+Oj4+O
        j4+Oj4+Oj4+Oj4+Oj4+Oj4+Oj4+Oj4+Oj4+Oj4+Oj4+Oj4+Oj4ujvYuw14uw14ujuY+Oj4+Oj5GUj6DH
        oKDFoKDHoKDFoJzDnKDHoKDHoKDFoKDFoKDHoKDFoKDHoKDFoDhvOAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>